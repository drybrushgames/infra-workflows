name: Fix Database URL and Environment

on:
  workflow_dispatch:

jobs:
  fix-database:
    runs-on: ubuntu-latest
    steps:
      - name: Tailscale up
        uses: tailscale/github-action@v2
        with:
          oauth-client-id:  ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret:     ${{ secrets.TAILSCALE_OAUTH_CLIENT_SECRET }}
          tags:             tag:ci
          version:          1.76.1

      - name: Fix database URL and environment variables
        run: |
          HOST="vps-0b87e710.tail751d97.ts.net"
          
          echo "=== Check current .env file ==="
          tailscale ssh deploy@$HOST "cat /opt/PiratePlunder/.env"
          
          echo -e "\n=== Add missing environment variables ==="
          tailscale ssh deploy@$HOST "cat >> /opt/PiratePlunder/.env << 'EOF'

# Database Configuration
DATABASE_URL=file:/opt/PiratePlunder/data/pirate.db

# Node Environment
NODE_ENV=production

# Server Configuration  
PORT=3001

# Authentication (placeholder - needs real values)
SESSION_SECRET=replace-with-real-secret-key-in-production
GOOGLE_CLIENT_ID=replace-with-real-google-client-id
GOOGLE_CLIENT_SECRET=replace-with-real-google-client-secret

# Frontend URL
FRONTEND_URL=http://vps-0b87e710.tail751d97.ts.net:3001
EOF"
          
          echo -e "\n=== Create data directory ==="
          tailscale ssh deploy@$HOST "mkdir -p /opt/PiratePlunder/data && chown deploy:deploy /opt/PiratePlunder/data"
          
          echo -e "\n=== Verify environment ==="
          tailscale ssh deploy@$HOST "cd /opt/PiratePlunder/backend && source ../.env && echo DATABASE_URL=$DATABASE_URL"
          
          echo -e "\n=== Set up database with environment ==="
          tailscale ssh deploy@$HOST "cd /opt/PiratePlunder/backend && source ../.env && npx prisma db push --accept-data-loss"
          
          echo -e "\n=== Test manual server start with environment ==="
          tailscale ssh deploy@$HOST "cd /opt/PiratePlunder/backend && source ../.env && timeout 10 node dist/server.js || echo 'Manual test completed'"
          
          echo -e "\n=== Start service ==="
          tailscale ssh deploy@$HOST "sudo systemctl start PiratePlunder.service"
          
          echo -e "\n=== Wait and check service ==="
          sleep 15
          tailscale ssh deploy@$HOST "systemctl is-active PiratePlunder.service"
          
          echo -e "\n=== Test final connectivity ==="
          tailscale ssh deploy@$HOST "curl -s http://localhost:3001/api/health"